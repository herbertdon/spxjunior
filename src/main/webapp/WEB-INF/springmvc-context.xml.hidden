<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

  <!-- context:annotation-config是配置@Autowired等这些注解的,能够识别解析这些注解的Bean会被配置,
  这个自然是必须要配置的,但是如果使用context:component-scan就会自动默认打开这个配置,所以这个配置就没必要再写一次了,
  除非要使用JPA注解-->
  <!--<context:annotation-config />-->

  <!-- mvc:annotation-driven是spring mvc的注解解释,主要是@Controller注解的解析,所以用这种注解配置Spring MVC的控制器/分发路径等,
   都会需要这个配置-->
  <mvc:annotation-driven/>
  <!--使用容器默认servlet来响应静态资源请求-->
  <mvc:default-servlet-handler />

  <context:component-scan base-package="com.ebao.spxjunior.spittr.web"/>

  <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    <property name="prefix" value="/WEB-INF/views/"></property>
    <property name="suffix" value=".jsp"></property>
    <property name="exposeContextBeansAsAttributes" value="true" ></property>
  </bean>


</beans>
